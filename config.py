#!/usr/bin/env python3
from collections import namedtuple

Library = namedtuple('Library',
                     ['name', 'files_of_interest'])

libraries = [
    Library('boringssl', [
            "ssl/internal.h",
            "ssl/ssl_lib.cc",
            "ssl/handshake_client.cc",
            "ssl/extensions.cc",
            "ssl/handshake_server.cc",
            "ssl/test/bssl_shim.cc",
            "ssl/ssl_test.cc",
            "ssl/ssl_x509.cc",
            "ssl/s3_lib.cc",
            "ssl/handshake.cc",
            "ssl/ssl_session.cc",
            "ssl/s3_both.cc",
            "ssl/ssl_cipher.cc",
            "ssl/ssl_cert.cc",
            "ssl/tls13_server.cc"]),
    Library('brotli',
            ['c/common/platform.h',
             'c/enc/encode.c',
             'c/enc/brotli_bit_stream.c',
             'c/dec/decode.c']),
    Library('curl',
            ['lib/http.c',
             'lib/ftp.c',
             'lib/smtp.c']),
    Library('fatfs',
            ['source/ff.c']),
    Library('flac',
            ['src/libFLAC/stream_encoder.c',
             'src/libFLAC/stream_decoder.c',
             'src/flac/encode.c',
             'src/flac/decode.c']),
    Library('fmt',
            ['src/os.cc',
             'src/fmt.cc']),
    Library('freetype',
            ['src/base/ftobjs.c',
             'src/truetype/ttgload.c',
             'src/truetype/ttinterp.c',
             'src/type1/t1load.c',
             'src/raster/ftraster.c']),
    Library('harfbuzz',
            ['src/hb-ot-layout.cc',
             'src/hb-ot-shape.cc',
             'src/hb-buffer.cc',
             'src/hb-font.cc']),
    Library('hunspell',
            ["src/hunspell/affixmgr.cxx",
             "src/hunspell/hunspell.cxx",
             "src/hunspell/suggestmgr.cxx",
             "src/tools/hunspell.cxx",
             "src/hunspell/csutil.cxx",
             "src/hunspell/hashmgr.cxx",
             "src/hunspell/affixmgr.hxx",
             "src/hunspell/csutil.hxx",
             "src/hunspell/hunspell.hxx",
             "src/hunspell/suggestmgr.hxx",
             "src/hunspell/affentry.cxx",
             "src/hunspell/hashmgr.hxx",
             "src/hunspell/affentry.hxx",
             "src/hunspell/replist.cxx",
             "src/parsers/textparser.cxx",
             "src/hunspell/atypes.hxx",
             "src/tools/munch.cxx",
             "src/tools/unmunch.cxx",
             "src/parsers/textparser.hxx",
             "src/hunspell/replist.hxx"]),
    Library('leveldb',
            ["db/db_test.cc",
             "db/db_impl.cc",
             "db/version_set.cc",
             "benchmarks/db_bench.cc",
             "util/env_posix.cc",
             "port/port_stdcxx.h",
             "include/leveldb/db.h",
             "util/env_test.cc",
             "table/table_test.cc",
             "include/leveldb/options.h",
             "db/db_impl.h",
             "db/version_set.h",
             "db/corruption_test.cc",
             "include/leveldb/env.h",
             "db/log_test.cc",
             "util/cache.cc",
             "port/port_example.h",
             "db/repair.cc",
             "db/skiplist_test.cc",
             "table/format.cc"]),
    Library('libb2',
            ["src/blake2b.c",
             "src/blake2-dispatch.c",
             "src/blake2s.c",
             "src/blake2-impl.h",
             "src/blake2b-round.h",
             "src/blake2s-load-xop.h",
             "src/blake2s-round.h",
             "src/blake2-config.h",
             "src/blake2bp.c",
             "src/blake2b-ref.c",
             "src/blake2s-ref.c",
             "src/blake2sp.c",
             "src/blake2.h",
             "src/blake2-kat.h",
             "src/blake2b-load-sse2.h",
             "src/blake2b-load-sse41.h",
             "src/blake2b-test.c",
             "src/blake2bp-test.c",
             "src/blake2s-load-sse2.h",
             "src/blake2s-load-sse41.h"]),
    Library('libbpf',
            ["src/libbpf.c",
             "src/libbpf.h",
             "src/btf.c",
             "src/bpf.c",
             "src/libbpf_internal.h",
             "src/bpf.h",
             "src/bpf_helper_defs.h",
             "src/btf.h",
             "src/btf_dump.c",
             "src/bpf_tracing.h",
             "src/bpf_helpers.h",
             "src/libbpf_probes.c",
             "src/netlink.c",
             "src/bpf_core_read.h",
             "src/linker.c",
             "src/ringbuf.c"]),
    Library('libjpeg-turbo',
            ['jcarith.c',
             'jchuff.c',
             'jdhuff.c',
             'turbojpeg.c']),
    Library('libnsgif',
            ['src/gif.c',
             'src/lzw.c']),
    Library('libpng',
            ['png.c',
             'png.h']),
    Library('libuv',
            ['src/uv-common.c',
             'src/uv-common.h',
             'src/unix/linux.c',
             'src/unix/core.c']),
    Library('lua',
            ['lvm.c',    # Lua Virtual Machine
             'lapi.c',   # Lua API
             'lgc.c']),  # Lua Garbage Collector
    Library('minizip-ng',
            ['minizip.c',
             'mz_zip.c']),
    Library('openjpeg',
            ['src/lib/openjp2/j2k.c',
             'src/lib/openjpip/jp2k_decoder.c',
             'src/lib/openjpip/jp2k_encoder.c']),
    Library('pcre2',
            ['src/pcre2_compile.c',
             'src/pcre2_match.c']),
    Library('sqlite',
            ["src/sqliteInt.h",
             "src/vdbe.c",
             "src/where.c",
             "src/btree.c",
             "src/select.c",
             "src/expr.c",
             "src/build.c",
             "src/main.c",
             "src/delete.c"]),
    Library('tinyxml2',
            ['tinyxml2.h',
             'tinyxml2.cpp']),
    Library('uthash',
            ["src/uthash.h",
             "src/utlist.h",
             "src/utarray.h",
             "src/utstring.h",
             "src/utringbuffer.h"]),
    Library('uvwasi',
            ["src/uvwasi.c",
             "include/uvwasi.h",
             "src/fd_table.c",
             "src/fd_table.h",
             "include/wasi_types.h",
             "src/uv_mapping.c",
             "src/clocks.c",
             "src/path_resolver.c"]),
    Library('xxHash',
            ['xxhash.h',
             'xxh3.h',
             'xxhash.c']),
    Library('xz',
            ['src/liblzma/api/lzma/block.h',
             'src/liblzma/common/stream_decoder.c',
             'src/liblzma/common/stream_encoder.c',
             'src/liblzma/common/block_decoder.c',
             'src/liblzma/common/block_encoder.c',
             'src/liblzma/lz/lz_decoder.c',
             'src/liblzma/lz/lz_encoder.c',
             'src/liblzma/lzma/lzma_decoder.c',
             'src/liblzma/lzma/lzma_encoder.c',
             'src/liblzma/rangecoder/range_decoder.h',
             'src/xz/coder.c']),
    Library('xz-embedded',
            ["linux/lib/decompress_unxz.c",
             "linux/lib/xz/xz_dec_stream.c",
             "linux/lib/xz/xz_dec_lzma2.c",
             "linux/lib/xz/xz_private.h",
             "linux/lib/xz/xz_dec_bcj.c",
             "linux/include/linux/xz.h",
             "userspace/xzminidec.c",
             "linux/lib/xz/xz_stream.h",
             "linux/lib/xz/xz_dec_syms.c",
             "linux/lib/xz/xz_crc32.c",
             "linux/lib/xz/xz_dec_test.c",
             "linux/lib/xz/xz_crc64.c"]),
    Library('zlib',
            ['deflate.c',
             'deflate.h',
             'inflate.c',
             'gzlib.c']),
    Library('zstd',
            ['lib/zstd.h',
             'lib/common/fse.h',
             'lib/common/zstd_internal.h',
             'lib/compress/zstd_compress.c',
             'lib/decompress/zstd_decompress.c']),
]

# Some libraries embed code themselves:
embedded = {
    "freetype":   ["zlib"],
    "libpng":     ["zlib"],
    "minizip-ng": ["xz"],
    "openjpeg":   ["libpng", "zlib"],
    "zlib":       ["minizip-ng"],
    "zstd":       ["xxHash", "zlib"],
}

# vim:set expandtab tabstop=4 shiftwidth=4 softtabstop=4 nowrap:
